// Generated by ProtoGen, Version=2.3.0.277, Culture=neutral, PublicKeyToken=8fd7408b07f8d2cd.  DO NOT EDIT!

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace UIH.XR.Basis.Proto
{

    namespace Proto
    {

        public static partial class SessionRequestCommand
        {

            #region Extension registration
            public static void RegisterAllExtensions(pb::ExtensionRegistry registry)
            {
            }
            #endregion
            #region Static variables
            internal static pbd::MessageDescriptor internal__static_UIH_XR_Basis_Proto_SessionRequestCommand__Descriptor;
            internal static pb::FieldAccess.FieldAccessorTable<global::UIH.XR.Basis.Proto.SessionRequestCommand, global::UIH.XR.Basis.Proto.SessionRequestCommand.Builder> internal__static_UIH_XR_Basis_Proto_SessionRequestCommand__FieldAccessorTable;
            #endregion
            #region Descriptor
            public static pbd::FileDescriptor Descriptor
            {
                get { return descriptor; }
            }
            private static pbd::FileDescriptor descriptor;

            static SessionRequestCommand()
            {
                byte[] descriptorData = global::System.Convert.FromBase64String(
                    "ChtTZXNzaW9uUmVxdWVzdENvbW1hbmQucHJvdG8SElVJSC5YUi5CYXNpcy5Q" +
                    "cm90byI+ChVTZXNzaW9uUmVxdWVzdENvbW1hbmQSEQoJQ29tbWFuZElkGAEg" +
                    "AigFEhIKClBhcmFtZXRlcnMYAiADKAw=");
                pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root)
                {
                    descriptor = root;
                    internal__static_UIH_XR_Basis_Proto_SessionRequestCommand__Descriptor = Descriptor.MessageTypes[0];
                    internal__static_UIH_XR_Basis_Proto_SessionRequestCommand__FieldAccessorTable =
                        new pb::FieldAccess.FieldAccessorTable<global::UIH.XR.Basis.Proto.SessionRequestCommand, global::UIH.XR.Basis.Proto.SessionRequestCommand.Builder>(internal__static_UIH_XR_Basis_Proto_SessionRequestCommand__Descriptor,
                            new string[] { "CommandId", "Parameters", });
                    return null;
                };
                pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
                    new pbd::FileDescriptor[] {
            }, assigner);
            }
            #endregion

        }
    }
    #region Messages
    public sealed partial class SessionRequestCommand : pb::GeneratedMessage<SessionRequestCommand, SessionRequestCommand.Builder>
    {
        private static readonly SessionRequestCommand defaultInstance = new Builder().BuildPartial();
        public static SessionRequestCommand DefaultInstance
        {
            get { return defaultInstance; }
        }

        public override SessionRequestCommand DefaultInstanceForType
        {
            get { return defaultInstance; }
        }

        protected override SessionRequestCommand ThisMessage
        {
            get { return this; }
        }

        public static pbd::MessageDescriptor Descriptor
        {
            get { return global::UIH.XR.Basis.Proto.Proto.SessionRequestCommand.internal__static_UIH_XR_Basis_Proto_SessionRequestCommand__Descriptor; }
        }

        protected override pb::FieldAccess.FieldAccessorTable<SessionRequestCommand, SessionRequestCommand.Builder> InternalFieldAccessors
        {
            get { return global::UIH.XR.Basis.Proto.Proto.SessionRequestCommand.internal__static_UIH_XR_Basis_Proto_SessionRequestCommand__FieldAccessorTable; }
        }

        public const int CommandIdFieldNumber = 1;
        private bool hasCommandId;
        private int commandId_ = 0;
        public bool HasCommandId
        {
            get { return hasCommandId; }
        }
        public int CommandId
        {
            get { return commandId_; }
        }

        public const int ParametersFieldNumber = 2;
        private pbc::PopsicleList<pb::ByteString> parameters_ = new pbc::PopsicleList<pb::ByteString>();
        public scg::IList<pb::ByteString> ParametersList
        {
            get { return pbc::Lists.AsReadOnly(parameters_); }
        }
        public int ParametersCount
        {
            get { return parameters_.Count; }
        }
        public pb::ByteString GetParameters(int index)
        {
            return parameters_[index];
        }

        public override bool IsInitialized
        {
            get
            {
                if (!hasCommandId) return false;
                return true;
            }
        }

        public override void WriteTo(pb::CodedOutputStream output)
        {
            int size = SerializedSize;
            if (HasCommandId)
            {
                output.WriteInt32(1, CommandId);
            }
            if (parameters_.Count > 0)
            {
                foreach (pb::ByteString element in parameters_)
                {
                    output.WriteBytes(2, element);
                }
            }
            UnknownFields.WriteTo(output);
        }

        private int memoizedSerializedSize = -1;
        public override int SerializedSize
        {
            get
            {
                int size = memoizedSerializedSize;
                if (size != -1) return size;

                size = 0;
                if (HasCommandId)
                {
                    size += pb::CodedOutputStream.ComputeInt32Size(1, CommandId);
                }
                {
                    int dataSize = 0;
                    foreach (pb::ByteString element in ParametersList)
                    {
                        dataSize += pb::CodedOutputStream.ComputeBytesSizeNoTag(element);
                    }
                    size += dataSize;
                    size += 1 * parameters_.Count;
                }
                size += UnknownFields.SerializedSize;
                memoizedSerializedSize = size;
                return size;
            }
        }

        public static SessionRequestCommand ParseFrom(pb::ByteString data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static SessionRequestCommand ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static SessionRequestCommand ParseFrom(byte[] data)
        {
            return ((Builder)CreateBuilder().MergeFrom(data)).BuildParsed();
        }
        public static SessionRequestCommand ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
        }
        public static SessionRequestCommand ParseFrom(global::System.IO.Stream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static SessionRequestCommand ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static SessionRequestCommand ParseDelimitedFrom(global::System.IO.Stream input)
        {
            return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
        }
        public static SessionRequestCommand ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry)
        {
            return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
        }
        public static SessionRequestCommand ParseFrom(pb::CodedInputStream input)
        {
            return ((Builder)CreateBuilder().MergeFrom(input)).BuildParsed();
        }
        public static SessionRequestCommand ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry)
        {
            return ((Builder)CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
        }
        public static Builder CreateBuilder() { return new Builder(); }
        public override Builder ToBuilder() { return CreateBuilder(this); }
        public override Builder CreateBuilderForType() { return new Builder(); }
        public static Builder CreateBuilder(SessionRequestCommand prototype)
        {
            return (Builder)new Builder().MergeFrom(prototype);
        }

        public sealed partial class Builder : pb::GeneratedBuilder<SessionRequestCommand, Builder>
        {
            protected override Builder ThisBuilder
            {
                get { return this; }
            }
            public Builder() { }

            SessionRequestCommand result = new SessionRequestCommand();

            protected override SessionRequestCommand MessageBeingBuilt
            {
                get { return result; }
            }

            public override Builder Clear()
            {
                result = new SessionRequestCommand();
                return this;
            }

            public override Builder Clone()
            {
                return new Builder().MergeFrom(result);
            }

            public override pbd::MessageDescriptor DescriptorForType
            {
                get { return global::UIH.XR.Basis.Proto.SessionRequestCommand.Descriptor; }
            }

            public override SessionRequestCommand DefaultInstanceForType
            {
                get { return global::UIH.XR.Basis.Proto.SessionRequestCommand.DefaultInstance; }
            }

            public override SessionRequestCommand BuildPartial()
            {
                if (result == null)
                {
                    throw new global::System.InvalidOperationException("build() has already been called on this Builder");
                }
                result.parameters_.MakeReadOnly();
                SessionRequestCommand returnMe = result;
                result = null;
                return returnMe;
            }

            public override Builder MergeFrom(pb::IMessage other)
            {
                if (other is SessionRequestCommand)
                {
                    return MergeFrom((SessionRequestCommand)other);
                }
                else
                {
                    base.MergeFrom(other);
                    return this;
                }
            }

            public override Builder MergeFrom(SessionRequestCommand other)
            {
                if (other == global::UIH.XR.Basis.Proto.SessionRequestCommand.DefaultInstance) return this;
                if (other.HasCommandId)
                {
                    CommandId = other.CommandId;
                }
                if (other.parameters_.Count != 0)
                {
                    base.AddRange(other.parameters_, result.parameters_);
                }
                this.MergeUnknownFields(other.UnknownFields);
                return this;
            }

            public override Builder MergeFrom(pb::CodedInputStream input)
            {
                return MergeFrom(input, pb::ExtensionRegistry.Empty);
            }

            public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry)
            {
                pb::UnknownFieldSet.Builder unknownFields = null;
                while (true)
                {
                    uint tag = input.ReadTag();
                    switch (tag)
                    {
                        case 0:
                            {
                                if (unknownFields != null)
                                {
                                    this.UnknownFields = unknownFields.Build();
                                }
                                return this;
                            }
                        default:
                            {
                                if (pb::WireFormat.IsEndGroupTag(tag))
                                {
                                    if (unknownFields != null)
                                    {
                                        this.UnknownFields = unknownFields.Build();
                                    }
                                    return this;
                                }
                                if (unknownFields == null)
                                {
                                    unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
                                }
                                ParseUnknownField(input, unknownFields, extensionRegistry, tag);
                                break;
                            }
                        case 8:
                            {
                                CommandId = input.ReadInt32();
                                break;
                            }
                        case 18:
                            {
                                AddParameters(input.ReadBytes());
                                break;
                            }
                    }
                }
            }


            public bool HasCommandId
            {
                get { return result.HasCommandId; }
            }
            public int CommandId
            {
                get { return result.CommandId; }
                set { SetCommandId(value); }
            }
            public Builder SetCommandId(int value)
            {
                result.hasCommandId = true;
                result.commandId_ = value;
                return this;
            }
            public Builder ClearCommandId()
            {
                result.hasCommandId = false;
                result.commandId_ = 0;
                return this;
            }

            public pbc::IPopsicleList<pb::ByteString> ParametersList
            {
                get { return result.parameters_; }
            }
            public int ParametersCount
            {
                get { return result.ParametersCount; }
            }
            public pb::ByteString GetParameters(int index)
            {
                return result.GetParameters(index);
            }
            public Builder SetParameters(int index, pb::ByteString value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                result.parameters_[index] = value;
                return this;
            }
            public Builder AddParameters(pb::ByteString value)
            {
                pb::ThrowHelper.ThrowIfNull(value, "value");
                result.parameters_.Add(value);
                return this;
            }
            public Builder AddRangeParameters(scg::IEnumerable<pb::ByteString> values)
            {
                base.AddRange(values, result.parameters_);
                return this;
            }
            public Builder ClearParameters()
            {
                result.parameters_.Clear();
                return this;
            }
        }
        static SessionRequestCommand()
        {
            object.ReferenceEquals(global::UIH.XR.Basis.Proto.Proto.SessionRequestCommand.Descriptor, null);
        }
    }

    #endregion

}
