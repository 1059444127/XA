<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" 
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" xmlns:d="http://schemas.microsoft.com/expression/blend/2008" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" mc:Ignorable="d">
	<Style x:Key="NoBGComboBox" TargetType="{x:Type ComboBox}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Foreground" Value="white"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Validation.ErrorTemplate" Value="{StaticResource ComboBoxErrorTemplateStyle}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid x:Name="MainGrid" SnapsToDevicePixels="true" Background="Transparent">
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="*"/>
							<ColumnDefinition Width="17"/>
						</Grid.ColumnDefinitions>
						<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="Slide" Effect="{DynamicResource PopupEffect}">
							<Border x:Name="DropDownBorder" BorderThickness="1" CornerRadius="3" Padding="3" Background="#c4d0d7" MaxHeight="{TemplateBinding MaxDropDownHeight}" MinWidth="{Binding ActualWidth, ElementName=MainGrid}" Margin="10">
								<ScrollViewer x:Name="DropDownScrollViewer">
									<Grid RenderOptions.ClearTypeHint="Enabled" ClipToBounds="True" Margin="0,0,0,-1">
										<Canvas HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
											<Rectangle x:Name="OpaqueRect" Fill="{Binding Background, ElementName=DropDownBorder}" Height="{Binding ActualHeight, ElementName=DropDownBorder}" Width="{Binding ActualWidth, ElementName=DropDownBorder}"/>
										</Canvas>
										<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"/>
									</Grid>
								</ScrollViewer>
							</Border>
						</Popup>
						<Border  x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"  Grid.ColumnSpan="2" CornerRadius="2">
							<ToggleButton IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ComboBoxReadonlyToggleButton}" Foreground="{TemplateBinding Foreground}"/>
						</Border>
						<Border VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Padding="{TemplateBinding Padding}">
							<ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true"/>
						<Trigger Property="HasItems" Value="false">
							<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource white70_Font}"/>
							<Setter Property="Opacity" TargetName="MainGrid" Value="0.7"/>
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
						<Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
							<Setter Property="Canvas.Top" TargetName="OpaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
							<Setter Property="Canvas.Left" TargetName="OpaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsEditable" Value="true">
				<Setter Property="IsTabStop" Value="false"/>
				<Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="NoBGRadioButton" TargetType="{x:Type RadioButton}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Foreground" Value="#FFAAB5BF"/>
		<Setter Property="Height" Value="46"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="FontSize" Value="20"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Effect" Value="{StaticResource ButtonEffect}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type RadioButton}">
					<Border x:Name="BG" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2" Padding="{TemplateBinding Padding}">
						<ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Uid="{TemplateBinding Uid}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true"/>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Foreground" Value="{StaticResource Highlighted}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource white70_Font}"/>
							<Setter Property="Opacity" Value="0.5"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="NoBGToggleButton" TargetType="{x:Type ToggleButton}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Foreground" Value="#FFAAB5BF"/>
		<Setter Property="Height" Value="46"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="HorizontalContentAlignment" Value="Center"/>
		<Setter Property="FontSize" Value="20"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Effect" Value="{StaticResource ButtonEffect}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="BG" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2" Padding="{TemplateBinding Padding}">
						<ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Uid="{TemplateBinding Uid}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true"/>
						<Trigger Property="IsChecked" Value="true">
							<Setter Property="Foreground" Value="{StaticResource Highlighted}"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource white70_Font}"/>
							<Setter Property="Opacity" Value="0.5"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="C_ComboToggleButton" TargetType="{x:Type ToggleButton}">
		<Setter Property="OverridesDefaultStyle" Value="true"/>
		<Setter Property="IsTabStop" Value="false"/>
		<Setter Property="ClickMode" Value="Press"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="border" Background="Transparent">
						<Path x:Name="Arrow" Data="M0,7 L7,7 3.5,11 z" Fill="{StaticResource white70_Font}" Stretch="Fill" Height="4" Width="7" HorizontalAlignment="Center" VerticalAlignment="Center"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Foreground" Value="White"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="true"/>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" TargetName="border" Value="0.5"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Width" Value="15"/>
		<Setter Property="Height" Value="15"/>
	</Style>
	<Style x:Key="ToolsComboBoxItemStyle" TargetType="{x:Type ComboBoxItem}">
		<Setter Property="Foreground" Value="#FF17262D"/>
		<Setter Property="BorderThickness" Value="0,0,0,1"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBoxItem}">
					<Border x:Name="Bd" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" BorderBrush="{TemplateBinding BorderBrush}">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="Selector.IsSelected" Value="True">
							<Setter Property="Background" TargetName="Bd" Value="#111a1f"/>
						</Trigger>
						<Trigger Property="IsHighlighted" Value="true"/>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" TargetName="Bd" Value="0.4"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ToolsComboBoxStyle" TargetType="{x:Type ComboBox}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="ItemContainerStyle" Value="{StaticResource ToolsComboBoxItemStyle}"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="VerticalAlignment" Value="Center"/>
		<Setter Property="Padding" Value="0"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid x:Name="MainGrid" SnapsToDevicePixels="true">
						<Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" PopupAnimation="Fade">
							<Border x:Name="DropDownBorder" Background="#FF1F3540" Margin="10" CornerRadius="3" Padding="0,3" Width="{Binding ActualWidth, ElementName=MainGrid}">
								<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</Border>
						</Popup>
						<Border VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Padding="{TemplateBinding Padding}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="2">
							<ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
						</Border>
						<Border  x:Name="Bd" Grid.ColumnSpan="2" HorizontalAlignment="Right" VerticalAlignment="Bottom">
							<ToggleButton x:Name="OpenButton" BorderBrush="{TemplateBinding BorderBrush}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Style="{DynamicResource C_ComboToggleButton}" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" Foreground="{TemplateBinding Foreground}"/>
						</Border>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsFocused" Value="True" SourceName="OpenButton">
							<Setter Property="Background" Value="#FF111a1f"/>
						</Trigger>
						<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true"/>
						<Trigger Property="HasItems" Value="false">
							<Setter Property="Height" TargetName="DropDownBorder" Value="95"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource white70_Font}"/>
							<Setter Property="Opacity" TargetName="MainGrid" Value="0.7"/>
						</Trigger>
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="IsEditable" Value="true">
				<Setter Property="IsTabStop" Value="false"/>
				<Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
			</Trigger>
		</Style.Triggers>
	</Style>
	<Style x:Key="Logo_ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}" TargetType="{x:Type ComboBox}">
		<Setter Property="MinHeight" Value="75"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ComboBox}">
					<Grid x:Name="MainGrid" SnapsToDevicePixels="true">
						<Popup x:Name="PART_Popup" AllowsTransparency="true" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}}" Width="{Binding ActualWidth, ElementName=MainGrid}" PopupAnimation="Slide" HorizontalOffset="20">
							<Border x:Name="DropDownBorder" BorderThickness="1" Background="#FFBAC5CC" Margin="20" CornerRadius="3" Padding="3">
									<Grid RenderOptions.ClearTypeHint="Enabled" ClipToBounds="True" Margin="0,0,0,-1">
										<ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
									</Grid>
							</Border>
						</Popup>
						<ToggleButton Template="{DynamicResource Transparent_ToggleButtonStyle}" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}" Background="{TemplateBinding Background}" BorderThickness="0" MinHeight="75">
							<Path Data="{StaticResource Logo}" Fill="{StaticResource white}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
						</ToggleButton>
						<ContentPresenter ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" Content="{TemplateBinding SelectionBoxItem}" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" IsHitTestVisible="false" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Visibility="Collapsed"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true"/>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{StaticResource white70_Font}"/>
							<Setter Property="Opacity" TargetName="MainGrid" Value="0.7"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="HorizontalAlignment" Value="Stretch"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Background" Value="#FF0D1316"/>
	</Style>
	<Style x:Key="HighlightButton" TargetType="{x:Type Button}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Background" Value="{StaticResource Highlighted}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Foreground" Value="{DynamicResource white}"/>
		<Setter Property="Height" Value="46"/>
		<Setter Property="Padding" Value="20,0"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="Uid" Value="0"/>
		<Setter Property="FontSize" Value="20"/>
		<Setter Property="VerticalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Button}">
					<Grid>
						<Rectangle x:Name="shadow" Fill="#66136799" RadiusX="2" RadiusY="2" Margin="0,2,0,-2"/>
						<Border x:Name="BG" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2" Padding="{TemplateBinding Padding}">
							<ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Uid="{TemplateBinding Uid}"/>
						</Border>
						<Grid x:Name="Down" Visibility="Hidden">
							<Rectangle Height="4" VerticalAlignment="Top" RadiusX="2" RadiusY="2">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#66000000" Offset="0"/>
										<GradientStop Color="#00000000" Offset="0.5"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<Rectangle Height="3" VerticalAlignment="Bottom" RadiusX="2" RadiusY="2">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="#4C000000" Offset="1"/>
										<GradientStop Color="#00000000" Offset="0.5"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<Rectangle Width="3" HorizontalAlignment="Left" RadiusX="2" RadiusY="2">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="0,0" StartPoint="1,0">
										<GradientStop Color="#4C000000" Offset="1"/>
										<GradientStop Color="#00000000" Offset="0.5"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
							<Rectangle HorizontalAlignment="Right" Width="3" RadiusX="2" RadiusY="2">
								<Rectangle.Fill>
									<LinearGradientBrush EndPoint="0,0" StartPoint="1,0">
										<GradientStop Color="#33000000" Offset="0"/>
										<GradientStop Color="#00000000" Offset="0.5"/>
									</LinearGradientBrush>
								</Rectangle.Fill>
							</Rectangle>
						</Grid>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true"/>
						<Trigger Property="IsPressed" Value="true">
							<Setter Property="Background" Value="#41698f"/>
							<Setter Property="Visibility" TargetName="shadow" Value="Hidden"/>
							<Setter Property="Visibility" TargetName="Down" Value="Visible"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" Value="0.4"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="UpDownToggleButton" TargetType="{x:Type ToggleButton}">
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderBrush" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Foreground" Value="#FFAAB5BF"/>
		<Setter Property="Height" Value="46"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="HorizontalAlignment" Value="Center"/>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="FontSize" Value="20"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Effect" Value="{StaticResource ButtonEffect}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="BG" Background="{TemplateBinding Background}" SnapsToDevicePixels="true" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="2" Padding="{TemplateBinding Padding}">
						<Grid Margin="0,9">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*"/>
								<ColumnDefinition Width="auto"/>
							</Grid.ColumnDefinitions>
							<ContentPresenter RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Uid="{TemplateBinding Uid}"/>
							<Grid Grid.Column="1" Margin="8,0">
								<Grid.RowDefinitions>
									<RowDefinition/>
									<RowDefinition/>
								</Grid.RowDefinitions>
								<Path x:Name="Up" Data="M4,0 L8,6 0,6 z" Opacity="0.8" Margin="0,0,0,1" VerticalAlignment="Bottom" Fill="{TemplateBinding Foreground}"/>
								<Path x:Name="Down" Data="M0,0 L8,0 4,6 z" Opacity="0.8" Grid.Row="1" Margin="0,1,0,0" VerticalAlignment="Top" Fill="{TemplateBinding Foreground}"/>
							</Grid>
						</Grid>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter Property="Foreground" Value="white"/>
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="True"/>
								<Condition Property="IsEnabled" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Fill" TargetName="Down" Value="{StaticResource Highlighted}"/>
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsChecked" Value="False"/>
								<Condition Property="IsEnabled" Value="True"/>
							</MultiTrigger.Conditions>
							<Setter Property="Fill" TargetName="Up" Value="{StaticResource Highlighted}"/>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="False">
							<Setter Property="Opacity" TargetName="Up" Value="0.6"/>
							<Setter Property="Opacity" TargetName="Down" Value="0.6"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ListTreeToggleButtonStyle" TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable" Value="False"/>
		<Setter Property="Background" Value="#1b2e37"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border x:Name="Light" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" CornerRadius="4">
						<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="True">
							<Setter Property="Background" Value="{StaticResource black20_Color}"/>
						</Trigger>
						<Trigger Property="IsChecked" Value="True">
							<Setter Property="CornerRadius" TargetName="Light" Value="4,4,0,0"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<ControlTemplate x:Key="ListSubTreeItemControlTemplate" TargetType="{x:Type TreeViewItem}">
		<Grid x:Name="grid" Background="Transparent" SnapsToDevicePixels="True">
			<Grid.RowDefinitions>
				<RowDefinition Height="auto"/>
				<RowDefinition MinHeight="8"/>
			</Grid.RowDefinitions>
			<Rectangle x:Name="rectangle" Margin="5,0,5,-6" Fill="#1b2e37" RadiusX="4" RadiusY="4" Effect="{TemplateBinding Effect}"/>
			<Border x:Name="BG" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="4" BorderThickness="{TemplateBinding BorderThickness}" Effect="{TemplateBinding Effect}"/>
			<ToggleButton x:Name="Expander" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ListTreeToggleButtonStyle}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" MinHeight="{TemplateBinding MinHeight}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}" Effect="{TemplateBinding Effect}" Padding="{TemplateBinding Padding}">
				<ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
			</ToggleButton>
			<Border x:Name="Bd" SnapsToDevicePixels="true" CornerRadius="4" Background="#CC18262D" Visibility="Hidden"/>
			<Border x:Name="ItemPanel" Grid.ColumnSpan="2" Grid.Row="1" CornerRadius="0,0,4,4" Background="#FF17272F" Padding="0,0,0,4">
				<Border ClipToBounds="True">
					<ItemsPresenter x:Name="ItemsHost" Margin="0,0,0,-1"/>
				</Border>
			</Border>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsExpanded" Value="false">
				<Setter Property="Visibility" TargetName="ItemPanel" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="HasItems" Value="false">
				<Setter Property="Visibility" TargetName="ItemPanel" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="IsSelected" Value="true">
				<Setter Property="Background" Value="#FF3E5E70"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Visibility" TargetName="Bd" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<ControlTemplate x:Key="ListTreeItemControlTemplate" TargetType="{x:Type TreeViewItem}">
		<Grid x:Name="grid" Background="Transparent" SnapsToDevicePixels="True">
			<Grid.RowDefinitions>
				<RowDefinition Height="auto"/>
				<RowDefinition/>
			</Grid.RowDefinitions>
			<Border x:Name="BG" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" CornerRadius="4" BorderThickness="{TemplateBinding BorderThickness}"/>
			<ToggleButton x:Name="Expander" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ListTreeToggleButtonStyle}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" MinHeight="{TemplateBinding MinHeight}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}"/>
			<ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
			<Border x:Name="Bd" SnapsToDevicePixels="true" CornerRadius="4" Background="#CC18262D" Visibility="Hidden"/>
			<ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Row="1"/>
		</Grid>
		<ControlTemplate.Triggers>
			<Trigger Property="IsExpanded" Value="false">
				<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
			</Trigger>
			<Trigger Property="HasItems" Value="false">
				<Setter Property="Visibility" TargetName="Expander" Value="Hidden"/>
			</Trigger>
			<Trigger Property="IsSelected" Value="true">
				<Setter Property="Background" Value="#FF3E5E70"/>
			</Trigger>
			<Trigger Property="IsEnabled" Value="false">
				<Setter Property="Visibility" TargetName="Bd" Value="Visible"/>
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>
	<Style x:Key="ListSubTreeItemStyle" TargetType="{x:Type TreeViewItem}">
		<Setter Property="Background" Value="Transparent"/>
		<Setter Property="BorderThickness" Value="0,0,0,1"/>
		<Setter Property="Foreground" Value="{DynamicResource white70_Font}"/>
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="Padding" Value="6,5"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
					<Grid x:Name="grid" Background="Transparent" SnapsToDevicePixels="True">
						<Grid.RowDefinitions>
							<RowDefinition Height="auto"/>
							<RowDefinition/>
						</Grid.RowDefinitions>
						<Border x:Name="BG" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Margin="3,0"/>
						<ToggleButton x:Name="Expander" IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}" Style="{StaticResource ListTreeToggleButtonStyle}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" MinHeight="{TemplateBinding MinHeight}" Background="{TemplateBinding Background}" Foreground="{TemplateBinding Foreground}">
							
						</ToggleButton>
						<ContentPresenter x:Name="PART_Header" ContentSource="Header" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
						<Border x:Name="Bd" SnapsToDevicePixels="true" Background="#CC18262D" Visibility="Hidden"/>
						<ItemsPresenter x:Name="ItemsHost" Grid.ColumnSpan="2" Grid.Row="1"/>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="false">
							<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter Property="Visibility" TargetName="ItemsHost" Value="Collapsed"/>
							<Setter Property="Visibility" TargetName="Expander" Value="Collapsed"/>
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter Property="Background" Value="#FF3E5E70"/>
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Visibility" TargetName="Bd" Value="Visible"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="BorderBrush" Value="#19FFFFFF"/>
	</Style>
    
	<Style x:Key="ListTreeItemStyle" TargetType="{x:Type TreeViewItem}">
		<Style.Triggers>
			<Trigger Property="HasItems" Value="True">
				<Setter Property="Template" Value="{DynamicResource ListSubTreeItemControlTemplate}"/>
				<Setter Property="ItemContainerStyle" Value="{StaticResource ListSubTreeItemStyle}"/>
			</Trigger>
		</Style.Triggers>
		<Setter Property="Background" Value="#1b2e37"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Foreground" Value="{StaticResource white70_Font}"/>
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
		<Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
		<Setter Property="MinHeight" Value="88"/>
		<Setter Property="Margin" Value="0,0,0,10"/>
		<Setter Property="Padding" Value="6,0"/>
		<Setter Property="Cursor" Value="Hand"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Effect" Value="{StaticResource ButtonEffect}"/>
		<Setter Property="Template" Value="{DynamicResource ListTreeItemControlTemplate}"/>
	</Style>
	<Style x:Key="ListTreeStyle" TargetType="{x:Type TreeView}">
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="Background" Value="#121d23"/>
		<Setter Property="BorderBrush" Value="{x:Null}"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Foreground" Value="White"/>
		<Setter Property="Padding" Value="6,0"/>
        <Setter Property="ItemContainerStyle" Value="{StaticResource ListTreeItemStyle}"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeView}">
					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
						<ScrollViewer x:Name="_tv_scrollviewer_" Background="{TemplateBinding Background}" CanContentScroll="false" Focusable="false" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
							<ItemsPresenter/>
						</ScrollViewer>
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Opacity" TargetName="Bd" Value="0.4"/>
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<Style x:Key="ListImgStyle" TargetType="{x:Type ListBox}">
		<Setter Property="Background" Value="#FF18242A"/>
		<Setter Property="BorderThickness" Value="0"/>
		<Setter Property="Padding" Value="0,0,10,20"/>
		<Setter Property="Foreground" Value="{StaticResource white70_Font}"/>
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled"/>
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="SelectionMode" Value="Extended"/>
		<Setter Property="ItemContainerStyle">
			<Setter.Value>
				<Style TargetType="{x:Type ListBoxItem}">
					<Setter Property="Background" Value="#CC1B2E37"/>
					<Setter Property="Margin" Value="10,20,0,0"/>
					<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
					<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
					<Setter Property="BorderThickness" Value="1"/>
					<Setter Property="BorderBrush" Value="Transparent"/>
					<Setter Property="AllowDrop" Value="True"/>
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="{x:Type ListBoxItem}">
								<Grid Background="Transparent">
									<Border x:Name="Bd" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="true" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
										<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
									</Border>
									<Border x:Name="more" Background="#33FFFFFF" HorizontalAlignment="Right" VerticalAlignment="Top" Width="24" Height="24" Margin="0,1,1,0" Visibility="Hidden">
										<Path Data="M0,0 L24,24 0,24 z" Fill="#99F4F4F5" StrokeThickness="0"/>
									</Border>
								</Grid>
								<ControlTemplate.Triggers>
									<Trigger Property="Uid" Value="more">
										<Setter Property="Visibility" TargetName="more" Value="Visible"/>
									</Trigger>
									<Trigger Property="IsMouseOver" Value="True"/>
									<Trigger Property="IsSelected" Value="true">
										<Setter Property="Foreground" Value="White"/>
									</Trigger>
									<Trigger Property="IsEnabled" Value="false">
										<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
										<Setter Property="Opacity" TargetName="Bd" Value="0.5"/>
									</Trigger>
                                    <Trigger Property="IsSelected" Value="True">
                                        <Setter Property="Foreground" Value="Red"></Setter>
                                    </Trigger>
								</ControlTemplate.Triggers>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Style>
			</Setter.Value>
		</Setter>
		<Setter Property="VerticalContentAlignment" Value="Center"/>
		<Setter Property="ItemsPanel">
			<Setter.Value>
				<ItemsPanelTemplate>
					<WrapPanel IsItemsHost="True"/>
				</ItemsPanelTemplate>
			</Setter.Value>
		</Setter>
		<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ListBox}">
					<ControlTemplate.Triggers>
						<!--<Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Background" TargetName="Bd" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
                        </Trigger>-->
						<Trigger Property="IsGrouping" Value="true">
							<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
						</Trigger>
					</ControlTemplate.Triggers>
					<Border x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
						<ScrollViewer Focusable="false" BorderThickness="0" HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}" VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" Margin="{TemplateBinding Padding}"/>
						</ScrollViewer>
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
	<!-- 应该在此定义资源字典条目。-->
</ResourceDictionary>