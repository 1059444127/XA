// Generated by ProtoGen, Version=2.3.0.277, Culture=neutral, PublicKeyToken=8fd7408b07f8d2cd.  DO NOT EDIT!

using pb = global::Google.ProtocolBuffers;
using pbc = global::Google.ProtocolBuffers.Collections;
using pbd = global::Google.ProtocolBuffers.Descriptors;
using scg = global::System.Collections.Generic;
namespace UIH.XR.Basis.Proto {
  
  namespace Proto {
    
    public static partial class GeneralRequestCommand {
    
      #region Extension registration
      public static void RegisterAllExtensions(pb::ExtensionRegistry registry) {
      }
      #endregion
      #region Static variables
      internal static pbd::MessageDescriptor internal__static_UIH_XR_Basis_Proto_GeneralRequestCommand__Descriptor;
      internal static pb::FieldAccess.FieldAccessorTable<global::UIH.XR.Basis.Proto.GeneralRequestCommand, global::UIH.XR.Basis.Proto.GeneralRequestCommand.Builder> internal__static_UIH_XR_Basis_Proto_GeneralRequestCommand__FieldAccessorTable;
      #endregion
      #region Descriptor
      public static pbd::FileDescriptor Descriptor {
        get { return descriptor; }
      }
      private static pbd::FileDescriptor descriptor;
      
      static GeneralRequestCommand() {
        byte[] descriptorData = global::System.Convert.FromBase64String(
            "ChtHZW5lcmFsUmVxdWVzdENvbW1hbmQucHJvdG8SElVJSC5YUi5CYXNpcy5Q" + 
            "cm90byI+ChVHZW5lcmFsUmVxdWVzdENvbW1hbmQSEQoJQ29tbWFuZElkGAEg" + 
            "AigFEhIKClBhcmFtZXRlcnMYAiABKAw=");
        pbd::FileDescriptor.InternalDescriptorAssigner assigner = delegate(pbd::FileDescriptor root) {
          descriptor = root;
          internal__static_UIH_XR_Basis_Proto_GeneralRequestCommand__Descriptor = Descriptor.MessageTypes[0];
          internal__static_UIH_XR_Basis_Proto_GeneralRequestCommand__FieldAccessorTable = 
              new pb::FieldAccess.FieldAccessorTable<global::UIH.XR.Basis.Proto.GeneralRequestCommand, global::UIH.XR.Basis.Proto.GeneralRequestCommand.Builder>(internal__static_UIH_XR_Basis_Proto_GeneralRequestCommand__Descriptor,
                  new string[] { "CommandId", "Parameters", });
          return null;
        };
        pbd::FileDescriptor.InternalBuildGeneratedFileFrom(descriptorData,
            new pbd::FileDescriptor[] {
            }, assigner);
      }
      #endregion
      
    }
  }
  #region Messages
  public sealed partial class GeneralRequestCommand : pb::GeneratedMessage<GeneralRequestCommand, GeneralRequestCommand.Builder> {
    private static readonly GeneralRequestCommand defaultInstance = new Builder().BuildPartial();
    public static GeneralRequestCommand DefaultInstance {
      get { return defaultInstance; }
    }
    
    public override GeneralRequestCommand DefaultInstanceForType {
      get { return defaultInstance; }
    }
    
    protected override GeneralRequestCommand ThisMessage {
      get { return this; }
    }
    
    public static pbd::MessageDescriptor Descriptor {
      get { return global::UIH.XR.Basis.Proto.Proto.GeneralRequestCommand.internal__static_UIH_XR_Basis_Proto_GeneralRequestCommand__Descriptor; }
    }
    
    protected override pb::FieldAccess.FieldAccessorTable<GeneralRequestCommand, GeneralRequestCommand.Builder> InternalFieldAccessors {
      get { return global::UIH.XR.Basis.Proto.Proto.GeneralRequestCommand.internal__static_UIH_XR_Basis_Proto_GeneralRequestCommand__FieldAccessorTable; }
    }
    
    public const int CommandIdFieldNumber = 1;
    private bool hasCommandId;
    private int commandId_ = 0;
    public bool HasCommandId {
      get { return hasCommandId; }
    }
    public int CommandId {
      get { return commandId_; }
    }
    
    public const int ParametersFieldNumber = 2;
    private bool hasParameters;
    private pb::ByteString parameters_ = pb::ByteString.Empty;
    public bool HasParameters {
      get { return hasParameters; }
    }
    public pb::ByteString Parameters {
      get { return parameters_; }
    }
    
    public override bool IsInitialized {
      get {
        if (!hasCommandId) return false;
        return true;
      }
    }
    
    public override void WriteTo(pb::CodedOutputStream output) {
      int size = SerializedSize;
      if (HasCommandId) {
        output.WriteInt32(1, CommandId);
      }
      if (HasParameters) {
        output.WriteBytes(2, Parameters);
      }
      UnknownFields.WriteTo(output);
    }
    
    private int memoizedSerializedSize = -1;
    public override int SerializedSize {
      get {
        int size = memoizedSerializedSize;
        if (size != -1) return size;
        
        size = 0;
        if (HasCommandId) {
          size += pb::CodedOutputStream.ComputeInt32Size(1, CommandId);
        }
        if (HasParameters) {
          size += pb::CodedOutputStream.ComputeBytesSize(2, Parameters);
        }
        size += UnknownFields.SerializedSize;
        memoizedSerializedSize = size;
        return size;
      }
    }
    
    public static GeneralRequestCommand ParseFrom(pb::ByteString data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GeneralRequestCommand ParseFrom(pb::ByteString data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GeneralRequestCommand ParseFrom(byte[] data) {
      return ((Builder) CreateBuilder().MergeFrom(data)).BuildParsed();
    }
    public static GeneralRequestCommand ParseFrom(byte[] data, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(data, extensionRegistry)).BuildParsed();
    }
    public static GeneralRequestCommand ParseFrom(global::System.IO.Stream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GeneralRequestCommand ParseFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static GeneralRequestCommand ParseDelimitedFrom(global::System.IO.Stream input) {
      return CreateBuilder().MergeDelimitedFrom(input).BuildParsed();
    }
    public static GeneralRequestCommand ParseDelimitedFrom(global::System.IO.Stream input, pb::ExtensionRegistry extensionRegistry) {
      return CreateBuilder().MergeDelimitedFrom(input, extensionRegistry).BuildParsed();
    }
    public static GeneralRequestCommand ParseFrom(pb::CodedInputStream input) {
      return ((Builder) CreateBuilder().MergeFrom(input)).BuildParsed();
    }
    public static GeneralRequestCommand ParseFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
      return ((Builder) CreateBuilder().MergeFrom(input, extensionRegistry)).BuildParsed();
    }
    public static Builder CreateBuilder() { return new Builder(); }
    public override Builder ToBuilder() { return CreateBuilder(this); }
    public override Builder CreateBuilderForType() { return new Builder(); }
    public static Builder CreateBuilder(GeneralRequestCommand prototype) {
      return (Builder) new Builder().MergeFrom(prototype);
    }
    
    public sealed partial class Builder : pb::GeneratedBuilder<GeneralRequestCommand, Builder> {
      protected override Builder ThisBuilder {
        get { return this; }
      }
      public Builder() {}
      
      GeneralRequestCommand result = new GeneralRequestCommand();
      
      protected override GeneralRequestCommand MessageBeingBuilt {
        get { return result; }
      }
      
      public override Builder Clear() {
        result = new GeneralRequestCommand();
        return this;
      }
      
      public override Builder Clone() {
        return new Builder().MergeFrom(result);
      }
      
      public override pbd::MessageDescriptor DescriptorForType {
        get { return global::UIH.XR.Basis.Proto.GeneralRequestCommand.Descriptor; }
      }
      
      public override GeneralRequestCommand DefaultInstanceForType {
        get { return global::UIH.XR.Basis.Proto.GeneralRequestCommand.DefaultInstance; }
      }
      
      public override GeneralRequestCommand BuildPartial() {
        if (result == null) {
          throw new global::System.InvalidOperationException("build() has already been called on this Builder");
        }
        GeneralRequestCommand returnMe = result;
        result = null;
        return returnMe;
      }
      
      public override Builder MergeFrom(pb::IMessage other) {
        if (other is GeneralRequestCommand) {
          return MergeFrom((GeneralRequestCommand) other);
        } else {
          base.MergeFrom(other);
          return this;
        }
      }
      
      public override Builder MergeFrom(GeneralRequestCommand other) {
        if (other == global::UIH.XR.Basis.Proto.GeneralRequestCommand.DefaultInstance) return this;
        if (other.HasCommandId) {
          CommandId = other.CommandId;
        }
        if (other.HasParameters) {
          Parameters = other.Parameters;
        }
        this.MergeUnknownFields(other.UnknownFields);
        return this;
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input) {
        return MergeFrom(input, pb::ExtensionRegistry.Empty);
      }
      
      public override Builder MergeFrom(pb::CodedInputStream input, pb::ExtensionRegistry extensionRegistry) {
        pb::UnknownFieldSet.Builder unknownFields = null;
        while (true) {
          uint tag = input.ReadTag();
          switch (tag) {
            case 0: {
              if (unknownFields != null) {
                this.UnknownFields = unknownFields.Build();
              }
              return this;
            }
            default: {
              if (pb::WireFormat.IsEndGroupTag(tag)) {
                if (unknownFields != null) {
                  this.UnknownFields = unknownFields.Build();
                }
                return this;
              }
              if (unknownFields == null) {
                unknownFields = pb::UnknownFieldSet.CreateBuilder(this.UnknownFields);
              }
              ParseUnknownField(input, unknownFields, extensionRegistry, tag);
              break;
            }
            case 8: {
              CommandId = input.ReadInt32();
              break;
            }
            case 18: {
              Parameters = input.ReadBytes();
              break;
            }
          }
        }
      }
      
      
      public bool HasCommandId {
        get { return result.HasCommandId; }
      }
      public int CommandId {
        get { return result.CommandId; }
        set { SetCommandId(value); }
      }
      public Builder SetCommandId(int value) {
        result.hasCommandId = true;
        result.commandId_ = value;
        return this;
      }
      public Builder ClearCommandId() {
        result.hasCommandId = false;
        result.commandId_ = 0;
        return this;
      }
      
      public bool HasParameters {
        get { return result.HasParameters; }
      }
      public pb::ByteString Parameters {
        get { return result.Parameters; }
        set { SetParameters(value); }
      }
      public Builder SetParameters(pb::ByteString value) {
        pb::ThrowHelper.ThrowIfNull(value, "value");
        result.hasParameters = true;
        result.parameters_ = value;
        return this;
      }
      public Builder ClearParameters() {
        result.hasParameters = false;
        result.parameters_ = pb::ByteString.Empty;
        return this;
      }
    }
    static GeneralRequestCommand() {
      object.ReferenceEquals(global::UIH.XR.Basis.Proto.Proto.GeneralRequestCommand.Descriptor, null);
    }
  }
  
  #endregion
  
}
